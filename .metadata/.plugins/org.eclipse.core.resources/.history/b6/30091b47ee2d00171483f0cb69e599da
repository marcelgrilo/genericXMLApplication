package control.ui;

import java.nio.file.spi.FileSystemProvider;

import control.ui.interfaces.INotifyable;
import model.app.RuntimeData;

public class RuntimeDataController implements Runnable, INotifyable {

	private RuntimeData data;
	
	private INotifyable parent;
	
	private int processedFiles;
	private int failedFiles;
	
	public RuntimeDataController(INotifyable parent)
	{
		data = new RuntimeData();
		this.parent = parent;
		this.processedFiles = 0;
		this.failedFiles = 0;
	}
	
	public void  FileProcessed()
	{
		processedFiles++;
	}
	
	public void  FileFailed()
	{
		failedFiles++;
	}
	
	@Override
	public void run() {
		try {
			// espera 2 segundos
			Thread.sleep(2000);
			
			
			parent.notifyController(this, "UpdateData");
			
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
	}

	private void UpdateData()
	{
		data.setThreadData(String.format("Threads Used : %1d ", Thread.activeCount()));
		data.setMemoryData(String.format("free memory / total memory :  %1d / %2d ", Runtime.getRuntime().freeMemory(), Runtime.getRuntime().totalMemory()));
		data.setFilesProcessedData((String.format("FilesProdessed : %1d ", processedFiles));
	}

	@Override
	public void notifyController(Object source, String message) {
				
	}

	@Override
	public INotifyable getParent() {
		return this.parent;
	}

}
