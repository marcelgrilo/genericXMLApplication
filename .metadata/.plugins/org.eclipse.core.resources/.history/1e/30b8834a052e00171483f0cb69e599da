package control.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.persistence.EntityManager;

import control.dao.DataSource;
import control.dao.ServerDao;
import control.ui.interfaces.INotifyable;
import control.ui.interfaces.IViewController;
import model.app.Server;
import view.ConfigView;
import view.interfaces.IView;

public class ConfigController implements  ActionListener, IViewController, INotifyable  {
	
	private List<Server> serverList;
	private EntityManager em = DataSource.createEntityManager();
	private ServerDao serverDao = new ServerDao(em);
	
	private INotifyable parent;
	private ConfigView configView;
	
	public ConfigController(INotifyable parent)
	{
		this.parent = parent;
		configView = new ConfigView(this);
		serverList = findAll();
		configView.UpdateServerList(serverList);
	}
	
    public List<Server> findAll(){
        return serverDao.findAll();
    }
    
	@Override
	public INotifyable getParent() {
		return parent;
	}

	@Override
	public void notifyController(Object source, String message) {
			
	}

	@Override
	public ActionListener getActionListener() {
		return this;
	}

	@Override
	public IView getView() {
		return this.configView;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getActionCommand().equals("ADD"))
		{
			ADD(configView.GetServerName() );
		}
		else if(e.getActionCommand().equals("DEL"))
		{	
			DEL(configView.GetListSelectedValue() );
		}
		serverList = findAll();
		configView.UpdateServerList(serverList);
	}
	
	private void DEL(String selected) {
		int serverIdToDelete = -1;
		for (Server server : serverList) {
			if(server.getUrl().equals(selected))
			{
				serverIdToDelete = server.getId();
			}
		}
		if(serverIdToDelete == -1){
			return;
		}
		else{			
			serverDao.delete(serverIdToDelete);
		}		
	}

	private void ADD(String url, )
	{
		boolean containsEquals = false;
		for (Server server : serverList) {
			if(server.getUrl().equals(selected))
			{
				containsEquals = true;
			}
		}
		if(containsEquals){
			return;
		}
		else{
			Server newServer = new Server();
			newServer.setUrl(selected);
			serverDao.create(newServer);
		}		
	}
	
}
