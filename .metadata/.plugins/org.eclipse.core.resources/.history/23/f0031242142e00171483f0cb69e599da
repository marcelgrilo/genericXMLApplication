package services;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;

import model.xml.InfoListXml;
import model.xml.InfoXml;
import model.xml.persist.Info;
import services.Interfaces.IModelFactory;

/**
 * InfoFactory, implementa a factory para o modelo "Info", retornando uma lista
 * de infos.
 */
public class InfoFactory implements IModelFactory<List<Info>, InfoListXml> {
	/**
	 * Cria o modelo Info a partir do XML utilizando as classes contidas em
	 * models.xml
	 */
	@Override
	public synchronized List<Info> CreateModels(File XMLFile) {

		JAXBContext context;
		try {
			context = JAXBContext.newInstance(InfoListXml.class);
			Unmarshaller um = context.createUnmarshaller();
			return Convert((InfoListXml) um.unmarshal(XMLFile));
		} catch (JAXBException e) {
			e.printStackTrace();
		}

		return new ArrayList<Info>();
	}

	/**
	 * Converte InfoListXml em List<Info>
	 */
	@Override
	public List<Info> Convert(InfoListXml xmlModel) {
		List<Info> infoList = new ArrayList<Info>();
		for (InfoXml infoXml : xmlModel.getInfoXmls()) {
			Info i = new Info();
			i.setIp(infoXml.getIp());
			i.setData(infoXml.getData());
			i.setPort(infoXml.getPort());
			infoList.add(i);
		}
		return infoList;
	}

}
